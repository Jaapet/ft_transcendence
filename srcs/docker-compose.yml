services:
  proxy:
    build: ./requirements/proxy
    container_name: proxy_${PROJECT_NAME} #Proxy will get the "localhost.cert"
    image: proxy_${PROJECT_NAME}
    command: #Startup traefik cmd to populate the static conf
      # - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websocket.address=:4433"
      # - "--entrypoints.websecure.asDefault=true"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--providers.file.filename=/app/ssl.yml"
      - "--providers.docker.constraints=Label(`my.zone`, `${PROJECT_NAME}`)"
    labels:
      - "my.zone=${PROJECT_NAME}"
      - "traefik.enable=true"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/dashboard`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.middlewares=api_auth"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.middlewares.api_auth.basicauth.users=${TRAEFIK_HTPASSWD}"
    ports:
      # - "${PROJECT_PORT_ID}80:80" #Will be 80 when submiting
      - "${PROJECT_PORT_ID}81:443" #Will be 443 when submiting
      - "${PROJECT_PORT_ID}80:4433" #Will be 4433 when submiting
      # - "${PROJECT_PORT_ID}82:8080" #Will be 8080 when submiting, used for traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock #Docker sock, should work in the school
    env_file:
      - .env
    restart: unless-stopped


  db:
    build: ./requirements/db
    container_name: db_${PROJECT_NAME} #Don't change it, its important for certificates, db will receive the "db.cert"
    image: db_${PROJECT_NAME}
    command: -c ssl=on -c ssl_cert_file=/ssl/db_${PROJECT_NAME}.crt -c ssl_key_file=/ssl/db_${PROJECT_NAME}.key
    env_file:
      - .env
    volumes: #Volumes binded should be changed before submiting the project
      - ./requirements/db/mount:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    build: ./requirements/backend
    container_name: backend_${PROJECT_NAME} #Don't change it, its important for certificates,  main_backend will receive the "main_db.cert"
    image: backend_${PROJECT_NAME}
    # ports: #Expose port should be removed, the only authorize entrypoint for the front && backend will be the front throught the proxy
    #   - "${PROJECT_PORT_ID}80:8000"
    env_file:
      - .env
    volumes: #Volumes binded should be changed before submiting the project
      - ./requirements/backend/conf/mount:/usr/app
    depends_on:
      - db
    restart: unless-stopped

  frontend:
    build: ./requirements/frontend
    container_name: frontend_${PROJECT_NAME} #Don't change it, its important for certificates, frontend will receive the "frontend.cert"
    image: frontend_${PROJECT_NAME}
    # ports: #Expose port should be removed, the only authorize entrypoint for the front && backend will be the front throught the proxy
    #   - "${PROJECT_PORT_ID}80:3001"
    labels: #Label used to dynamically conf traefik
      - "my.zone=${PROJECT_NAME}"
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.priority=10"
      - "traefik.http.routers.frontend.rule=Host(`${FQDN}`)"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    env_file:
      - .env
    volumes: #Volumes binded should be changed before submiting the project
      - ./requirements/frontend/conf/mount:/app/src
    depends_on:
      - backend
      - proxy
    restart: unless-stopped
